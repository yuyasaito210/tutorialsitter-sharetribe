= javascript_include_tag "#{STRIPE_JS_HOST}/v3/"
- if paypal_in_use
  .row
    .col-12
      %h3
        = t(".pay_with_card")
.form-row
  .row
    .col-12
      #card-element
      %label.hidden#card-errors{role: "alert"}

  - if stripe_shipping_required
    %h2= t(".address")
    .row
      .col-12
        %label= t(".address_name")
        = text_field_tag 'shipping_address[name]', '', 'stripe-shipping-address': true

    .row
      .col-12
        %label= t(".address_street1")
        = text_field_tag 'shipping_address[street1]', '', 'stripe-shipping-address': true
    .row
      .col-12
        %label= t(".address_street2")
        = text_field_tag 'shipping_address[street2]', ''

    .row
      .col-4
        %label= t(".address_postal_code")
        = text_field_tag 'shipping_address[postal_code]', '', 'stripe-shipping-address': true

      .col-8
        %label= t(".address_city")
        = text_field_tag 'shipping_address[city]', '', 'stripe-shipping-address': true

    .row
      .col-4
        %label= t(".address_country")
        = select_tag 'shipping_address[country_code]', options_for_select(CountryI18nHelper.translated_shipping_countries, @current_community.country), {}

      .col-8
        .us-only.hidden
          %label= t(".address_state")
          = select_tag 'shipping_address[state_or_province]', options_for_select(CountryI18nHelper.us_states), 'stripe-shipping-address': true, prompt: "Select state"
    .row
      .col-12

  .row.stripe-payment
    .col-12.payment-button-wrapper.paypal-button-wrapper
      = button_tag t("stripe_accounts.add_and_pay"), id: "send-add-card", class: 'checkout-with-stripe-button'

  .row
    .col-12
      %p
        = t("stripe_accounts.card_not_stored").html_safe


- content_for :extra_javascript do
  :javascript
    var stripe = Stripe("#{publishable_key}");
    var elements = stripe.elements();
    var style = {
      base: {
        color: '#32325d',
        lineHeight: '24px',
        fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
        fontSmoothing: 'antialiased',
        fontSize: '16px',
        '::placeholder': {
          color: '#aab7c4'
        }
      },
      invalid: {
        color: '#fa755a',
        iconColor: '#fa755a'
      }
    };

    $("#shipping_address_country_code").change(function(){
      if($(this).val() == 'US') $(".us-only").show(); else $(".us-only").hide(); 
    });
    $("#shipping_address_country_code").trigger("change");

    var card = elements.create('card', {style: style});
    card.mount('#card-element');
    card.addEventListener('change', function(event) {
      var displayError = document.getElementById('card-errors');
      if (event.error) {
        displayError.textContent = event.error.message;
        displayError.className = 'error';
      } else {
        displayError.textContent = '';
        displayError.className = 'hidden';
      }
    });

    $("#send-add-card").on('click', function(event) {
      event.preventDefault();
      var form = $("#transaction-form");
      form.validate();
      $('input[stripe-shipping-address]').each(function(){
        $(this).rules('add', { required: true });
      });
      if(!form.valid()) {
        return false;
      }

      stripe.createToken(card).then(function(result) {
        var errorElement = document.getElementById('card-errors');
        if (result.error) {
          errorElement.textContent = result.error.message;
          errorElement.className = 'error';
        } else {
          errorElement.className = 'hidden';
          var input = $("<input/>", {type: "hidden", name: "stripe_token", value: result.token.id});
          form.append(input);
          $("#payment_type").val("stripe");
          if(form.valid()) {
            form.submit();
          }
        }
      });
    });
